CCS PCM C Compiler, Version 4.074, 22034               08-Jun-22 00:50

               Filename: 7_segments.lst

               ROM used: 303 words (4%)
                         Largest free fragment is 2048
               RAM used: 11 (3%) at main() level
                         12 (3%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   027
0003:  NOP
.................... #include <16f887.h>  
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
.................... #list 
....................  
.................... #device *=16 ADC=8 // Khai bao during con tro 16-bt  
.................... #FUSES NOWDT, HS, NOPUT, NOBROWNOUT,NOPROTECT, NOLVP  
.................... #use delay(clock=8000000) // Khai bao su ðung Thach Anh 8 - Mhz 
*
0013:  MOVLW  25
0014:  MOVWF  04
0015:  BCF    03.7
0016:  MOVF   00,W
0017:  BTFSC  03.2
0018:  GOTO   026
0019:  MOVLW  02
001A:  MOVWF  78
001B:  CLRF   77
001C:  DECFSZ 77,F
001D:  GOTO   01C
001E:  DECFSZ 78,F
001F:  GOTO   01B
0020:  MOVLW  97
0021:  MOVWF  77
0022:  DECFSZ 77,F
0023:  GOTO   022
0024:  DECFSZ 00,F
0025:  GOTO   019
0026:  RETLW  00
....................  
.................... int i,m; 
.................... int n; 
.................... const char led7[] = {0x3f,0x3f, 0x06, 0x5b, 0x4f,0x66,0x6d, 0x7d, 0x07,0x7f,0x6f}; 
.................... void main() 
.................... { 
0027:  CLRF   04
0028:  BCF    03.7
0029:  MOVLW  1F
002A:  ANDWF  03,F
002B:  BSF    03.5
002C:  BSF    03.6
002D:  MOVF   09,W
002E:  ANDLW  C0
002F:  MOVWF  09
0030:  BCF    03.6
0031:  BCF    1F.4
0032:  BCF    1F.5
0033:  MOVLW  00
0034:  BSF    03.6
0035:  MOVWF  08
0036:  BCF    03.5
0037:  CLRF   07
0038:  CLRF   08
0039:  CLRF   09
.................... set_tris_a(0x00); 
*
003D:  MOVLW  00
003E:  BSF    03.5
003F:  MOVWF  05
.................... set_tris_b(0x00);  
0040:  MOVWF  06
.................... set_tris_c(0x00); 
0041:  MOVWF  07
0042:  BCF    03.5
0043:  MOVWF  23
.................... set_tris_d(0x00);  
0044:  BSF    03.5
0045:  MOVWF  08
....................  
.................... output_a(0x08);  
0046:  CLRF   05
0047:  MOVLW  08
0048:  BCF    03.5
0049:  MOVWF  05
....................  
....................  
....................  
.................... while(TRUE) 
.................... { 
.................... output_low(pin_d0); 
004A:  BSF    03.5
004B:  BCF    08.0
004C:  BCF    03.5
004D:  BCF    08.0
.................... output_low(pin_d1); 
004E:  BSF    03.5
004F:  BCF    08.1
0050:  BCF    03.5
0051:  BCF    08.1
.................... output_low(pin_d2); 
0052:  BSF    03.5
0053:  BCF    08.2
0054:  BCF    03.5
0055:  BCF    08.2
....................  
....................  
.................... output_b(~led7[3]); 
0056:  BSF    03.5
0057:  CLRF   06
0058:  MOVLW  A4
0059:  BCF    03.5
005A:  MOVWF  06
....................  
.................... for(i=6;i >=1;i--){ 
005B:  MOVLW  06
005C:  MOVWF  20
005D:  MOVF   20,W
005E:  SUBLW  00
005F:  BTFSC  03.0
0060:  GOTO   082
.................... output_c(~led7[i]); 
0061:  MOVF   20,W
0062:  CALL   004
0063:  MOVWF  78
0064:  MOVWF  24
0065:  COMF   24,F
0066:  MOVLW  00
0067:  MOVWF  23
0068:  BSF    03.5
0069:  CLRF   07
006A:  BCF    03.5
006B:  MOVF   24,W
006C:  MOVWF  07
.................... delay_ms(500); 
006D:  MOVLW  02
006E:  MOVWF  24
006F:  MOVLW  FA
0070:  MOVWF  25
0071:  CALL   013
0072:  DECFSZ 24,F
0073:  GOTO   06F
....................  
.................... output_high(pin_d0); 
0074:  BSF    03.5
0075:  BCF    08.0
0076:  BCF    03.5
0077:  BSF    08.0
.................... output_low(pin_d1); 
0078:  BSF    03.5
0079:  BCF    08.1
007A:  BCF    03.5
007B:  BCF    08.1
.................... output_low(pin_d2); 
007C:  BSF    03.5
007D:  BCF    08.2
007E:  BCF    03.5
007F:  BCF    08.2
.................... } 
0080:  DECF   20,F
0081:  GOTO   05D
....................  
....................  
.................... for(m=2;m>=1;m--){  
0082:  MOVLW  02
0083:  MOVWF  21
0084:  MOVF   21,W
0085:  SUBLW  00
0086:  BTFSC  03.0
0087:  GOTO   0BB
.................... output_b(~led7[m]); 
0088:  MOVF   21,W
0089:  CALL   004
008A:  MOVWF  78
008B:  MOVWF  24
008C:  COMF   24,F
008D:  BSF    03.5
008E:  CLRF   06
008F:  BCF    03.5
0090:  MOVF   24,W
0091:  MOVWF  06
....................  
.................... for(n=10;n >=1;n--){ 
0092:  MOVLW  0A
0093:  MOVWF  22
0094:  MOVF   22,W
0095:  SUBLW  00
0096:  BTFSC  03.0
0097:  GOTO   0B9
.................... output_c(~led7[n]); 
0098:  MOVF   22,W
0099:  CALL   004
009A:  MOVWF  78
009B:  MOVWF  24
009C:  COMF   24,F
009D:  MOVLW  00
009E:  MOVWF  23
009F:  BSF    03.5
00A0:  CLRF   07
00A1:  BCF    03.5
00A2:  MOVF   24,W
00A3:  MOVWF  07
.................... delay_ms(500); 
00A4:  MOVLW  02
00A5:  MOVWF  24
00A6:  MOVLW  FA
00A7:  MOVWF  25
00A8:  CALL   013
00A9:  DECFSZ 24,F
00AA:  GOTO   0A6
....................  
.................... output_high(pin_d0); 
00AB:  BSF    03.5
00AC:  BCF    08.0
00AD:  BCF    03.5
00AE:  BSF    08.0
.................... output_low(pin_d1); 
00AF:  BSF    03.5
00B0:  BCF    08.1
00B1:  BCF    03.5
00B2:  BCF    08.1
.................... output_low(pin_d2); 
00B3:  BSF    03.5
00B4:  BCF    08.2
00B5:  BCF    03.5
00B6:  BCF    08.2
.................... } 
00B7:  DECF   22,F
00B8:  GOTO   094
.................... } 
00B9:  DECF   21,F
00BA:  GOTO   084
....................  
....................  
....................  
.................... for(m=1;m>=1;m--){  
00BB:  MOVLW  01
00BC:  MOVWF  21
00BD:  MOVF   21,W
00BE:  SUBLW  00
00BF:  BTFSC  03.0
00C0:  GOTO   0F4
.................... output_b(~led7[m]); 
00C1:  MOVF   21,W
00C2:  CALL   004
00C3:  MOVWF  78
00C4:  MOVWF  24
00C5:  COMF   24,F
00C6:  BSF    03.5
00C7:  CLRF   06
00C8:  BCF    03.5
00C9:  MOVF   24,W
00CA:  MOVWF  06
....................  
.................... for(i=4;i >= 1;i--) 
00CB:  MOVLW  04
00CC:  MOVWF  20
00CD:  MOVF   20,W
00CE:  SUBLW  00
00CF:  BTFSC  03.0
00D0:  GOTO   0F2
.................... { 
.................... output_low(pin_d0); 
00D1:  BSF    03.5
00D2:  BCF    08.0
00D3:  BCF    03.5
00D4:  BCF    08.0
.................... output_high(pin_d1); 
00D5:  BSF    03.5
00D6:  BCF    08.1
00D7:  BCF    03.5
00D8:  BSF    08.1
.................... output_low(pin_d2); 
00D9:  BSF    03.5
00DA:  BCF    08.2
00DB:  BCF    03.5
00DC:  BCF    08.2
.................... output_c(~led7[i]); 
00DD:  MOVF   20,W
00DE:  CALL   004
00DF:  MOVWF  78
00E0:  MOVWF  24
00E1:  COMF   24,F
00E2:  MOVLW  00
00E3:  MOVWF  23
00E4:  BSF    03.5
00E5:  CLRF   07
00E6:  BCF    03.5
00E7:  MOVF   24,W
00E8:  MOVWF  07
.................... delay_ms(500); 
00E9:  MOVLW  02
00EA:  MOVWF  24
00EB:  MOVLW  FA
00EC:  MOVWF  25
00ED:  CALL   013
00EE:  DECFSZ 24,F
00EF:  GOTO   0EB
....................  
....................  
.................... } 
00F0:  DECF   20,F
00F1:  GOTO   0CD
.................... } 
00F2:  DECF   21,F
00F3:  GOTO   0BD
....................  
.................... for(m=5;m>=1;m--){  
00F4:  MOVLW  05
00F5:  MOVWF  21
00F6:  MOVF   21,W
00F7:  SUBLW  00
00F8:  BTFSC  03.0
00F9:  GOTO   12D
.................... output_b(~led7[m]); 
00FA:  MOVF   21,W
00FB:  CALL   004
00FC:  MOVWF  78
00FD:  MOVWF  24
00FE:  COMF   24,F
00FF:  BSF    03.5
0100:  CLRF   06
0101:  BCF    03.5
0102:  MOVF   24,W
0103:  MOVWF  06
....................  
.................... for(i=10;i >= 1;i--) 
0104:  MOVLW  0A
0105:  MOVWF  20
0106:  MOVF   20,W
0107:  SUBLW  00
0108:  BTFSC  03.0
0109:  GOTO   12B
.................... { 
.................... output_c(~led7[i]); 
010A:  MOVF   20,W
010B:  CALL   004
010C:  MOVWF  78
010D:  MOVWF  24
010E:  COMF   24,F
010F:  MOVLW  00
0110:  MOVWF  23
0111:  BSF    03.5
0112:  CLRF   07
0113:  BCF    03.5
0114:  MOVF   24,W
0115:  MOVWF  07
.................... delay_ms(500); 
0116:  MOVLW  02
0117:  MOVWF  24
0118:  MOVLW  FA
0119:  MOVWF  25
011A:  CALL   013
011B:  DECFSZ 24,F
011C:  GOTO   118
....................  
.................... output_low(pin_d0); 
011D:  BSF    03.5
011E:  BCF    08.0
011F:  BCF    03.5
0120:  BCF    08.0
.................... output_low(pin_d1); 
0121:  BSF    03.5
0122:  BCF    08.1
0123:  BCF    03.5
0124:  BCF    08.1
.................... output_high(pin_d2); 
0125:  BSF    03.5
0126:  BCF    08.2
0127:  BCF    03.5
0128:  BSF    08.2
.................... } 
0129:  DECF   20,F
012A:  GOTO   106
.................... } 
012B:  DECF   21,F
012C:  GOTO   0F6
....................  
....................  
....................  
.................... } 
012D:  GOTO   04A
.................... } 
012E:  SLEEP

Configuration Fuses:
   Word  1: 2CF2   HS NOWDT NOPUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   NOWRT BORV40
